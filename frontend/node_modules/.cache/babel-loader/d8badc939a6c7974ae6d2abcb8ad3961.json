{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\akurt\\\\HotelApp\\\\frontend\\\\src\\\\RadnikPrijava.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./components/pages/Prijava.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link } from \"react-router-dom\";\nimport Navbar from './components/Navbar';\nimport Axios from \"axios\";\nimport Alert from \"reactstrap/lib/Alert\";\nexport default function Prijava() {\n  _s();\n\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  function validateForm() {\n    return userName.length > 0 && password.length > 0;\n  }\n\n  handleSubmit = async event => {\n    Axios.get(\"http://localhost:3001/login?username=\" + userName + \"&password=\" + password).then((result, fields, err) => {\n      if (result == 401) {\n        setError(true);\n        return false;\n      } else {\n        setError(false);\n        return true;\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prijava-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Login\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Prijava za osoblje\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            size: \"lg\",\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              autoFocus: true,\n              type: \"username\",\n              value: userName,\n              onChange: e => setUserName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            size: \"lg\",\n            controlId: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n            color: \"danger\",\n            fade: false,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\",\n                fontWeight: \"bold\"\n              },\n              children: \"Uneseni podaci nisu ispravni!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/radnik-profil\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              block: true,\n              size: \"lg\",\n              type: \"submit\",\n              variant: \"primary\",\n              disabled: !validateForm(),\n              children: \"Prijava\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reg-div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Prijava, \"i0uqcbI4B8R/3QTGch/LA9PE9vM=\");\n\n_c = Prijava;\n\nvar _c;\n\n$RefreshReg$(_c, \"Prijava\");","map":{"version":3,"sources":["C:/Users/akurt/HotelApp/frontend/src/RadnikPrijava.js"],"names":["React","useState","Form","Button","Link","Navbar","Axios","Alert","Prijava","userName","setUserName","password","setPassword","error","setError","validateForm","length","handleSubmit","event","get","then","result","fields","err","e","target","value","color","fontWeight"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,gCAAP;AACA,OAAO,sCAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAkBb,QAAQ,CAAC,KAAD,CAAhC;;AACA,WAASc,YAAT,GAAwB;AACtB,WAAON,QAAQ,CAACO,MAAT,GAAkB,CAAlB,IAAuBL,QAAQ,CAACK,MAAT,GAAkB,CAAhD;AACD;;AAEDC,EAAAA,YAAY,GAAG,MAAMC,KAAN,IAAe;AAC5BZ,IAAAA,KAAK,CAACa,GAAN,CAAU,0CAAwCV,QAAxC,GAAiD,YAAjD,GAA8DE,QAAxE,EAAkFS,IAAlF,CAAuF,CAACC,MAAD,EAASC,MAAT,EAAiBC,GAAjB,KAAuB;AAC5G,UAAGF,MAAM,IAAE,GAAX,EAAe;AAAEP,QAAAA,QAAQ,CAAC,IAAD,CAAR;AAAgB,eAAO,KAAP;AAAc,OAA/C,MACK;AAACA,QAAAA,QAAQ,CAAC,KAAD,CAAR;AAAiB,eAAO,IAAP;AAAa;AACvC,KAHC;AAKD,GAND;;AAQA,sBACE;AAAA,4BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BAEA;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAE,KAAKG,YAArB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,IAAI,EAAC,IAAjB;AAAsB,YAAA,SAAS,EAAC,OAAhC;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,SAAS,MADX;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,KAAK,EAAER,QAHT;AAIE,cAAA,QAAQ,EAAGe,CAAD,IAAOd,WAAW,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,IAAI,EAAC,IAAjB;AAAsB,YAAA,SAAS,EAAC,UAAhC;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,KAAK,EAAEf,QAFT;AAGE,cAAA,QAAQ,EAAGa,CAAD,IAAOZ,WAAW,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AAH9B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,EAkBGb,KAAK,iBAAI,QAAC,KAAD;AAAO,YAAA,KAAK,EAAC,QAAb;AAAsB,YAAA,IAAI,EAAE,KAA5B;AAAA,mCACN;AAAG,cAAA,KAAK,EAAE;AAACc,gBAAAA,KAAK,EAAE,KAAR;AAAeC,gBAAAA,UAAU,EAAE;AAA3B,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,kBAlBZ,eAqBE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,gBAAT;AAAA,mCACA,QAAC,MAAD;AAAQ,cAAA,KAAK,MAAb;AAAc,cAAA,IAAI,EAAC,IAAnB;AAAwB,cAAA,IAAI,EAAC,QAA7B;AAAsC,cAAA,OAAO,EAAC,SAA9C;AAAwD,cAAA,QAAQ,EAAE,CAACb,YAAY,EAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eA6BE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADF;AA2CD;;GA3DuBP,O;;KAAAA,O","sourcesContent":["import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./components/pages/Prijava.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from './components/Navbar';\r\nimport Axios from \"axios\"\r\nimport Alert from \"reactstrap/lib/Alert\";\r\n\r\nexport default function Prijava() {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError]=useState(false);\r\n  function validateForm() {\r\n    return userName.length > 0 && password.length > 0;\r\n  }\r\n\r\n  handleSubmit = async(event) =>{\r\n    Axios.get(\"http://localhost:3001/login?username=\"+userName+\"&password=\"+password).then((result, fields, err)=>{\r\n      if(result==401){ setError(true); return false;}\r\n      else {setError(false); return true;}\r\n  });\r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n    <div className=\"prijava-container\">\r\n    \r\n    <div className=\"Login\">\r\n    <h1>Prijava za osoblje</h1>\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Form.Group size=\"lg\" controlId=\"email\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"username\"\r\n            value={userName}\r\n            onChange={(e) => setUserName(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        {error && <Alert color=\"danger\" fade={false}>\r\n            <p style={{color: \"red\", fontWeight: \"bold\"}}>Uneseni podaci nisu ispravni!</p>\r\n          </Alert>}\r\n        <Link to=\"/radnik-profil\">\r\n        <Button block size=\"lg\" type=\"submit\" variant=\"primary\" disabled={!validateForm()}>\r\n          Prijava\r\n        </Button>\r\n        </Link>\r\n      </Form>\r\n      <div className=\"reg-div\">\r\n    \r\n      </div>\r\n      \r\n\r\n    </div>\r\n    </div>\r\n    </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}