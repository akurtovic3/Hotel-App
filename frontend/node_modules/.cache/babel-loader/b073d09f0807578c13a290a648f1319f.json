{"ast":null,"code":"import axios from 'axios';\nexport default {\n  getLoginStatus: async () => {\n    try {\n      const res = await axios.get('/api/login/status');\n      return res.data;\n    } catch (err) {\n      return console.log(err);\n    }\n  },\n  postUserLogin: async (user, done) => {\n    try {\n      const res = await axios.post('/api/login', user); // Async function for logging in, setting up callback to return two params, ( error: false if no error, res.data: userData from server )\n\n      return res.data.user.username ? done(false, res.data) : done(false, 'error logging in');\n    } catch (err) {\n      return done(true, false);\n    }\n  },\n  getLoggedOut: async () => {\n    try {\n      const res = await axios.get('/api/logout');\n      return res;\n    } catch (err) {\n      return console.log(err);\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/zahir/Desktop/noviReact/Verzija 22.1.2021/HotelApp/frontend/src/utils/authapi.js"],"names":["axios","getLoginStatus","res","get","data","err","console","log","postUserLogin","user","done","post","username","getLoggedOut"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACbC,EAAAA,cAAc,EAAE,YAAY;AAC1B,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,mBAAV,CAAlB;AACA,aAAOD,GAAG,CAACE,IAAX;AACD,KAHD,CAGE,OAAOC,GAAP,EAAY;AACZ,aAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAP;AACD;AACF,GARY;AASbG,EAAAA,aAAa,EAAE,OAAOC,IAAP,EAAaC,IAAb,KAAsB;AACnC,QAAI;AACF,YAAMR,GAAG,GAAG,MAAMF,KAAK,CAACW,IAAN,CAAW,YAAX,EAAyBF,IAAzB,CAAlB,CADE,CAEF;;AACA,aAAOP,GAAG,CAACE,IAAJ,CAASK,IAAT,CAAcG,QAAd,GACHF,IAAI,CAAC,KAAD,EAAQR,GAAG,CAACE,IAAZ,CADD,GAEHM,IAAI,CAAC,KAAD,EAAQ,kBAAR,CAFR;AAGD,KAND,CAME,OAAOL,GAAP,EAAY;AACZ,aAAOK,IAAI,CAAC,IAAD,EAAO,KAAP,CAAX;AACD;AACF,GAnBY;AAoBbG,EAAAA,YAAY,EAAE,YAAY;AACxB,QAAI;AACF,YAAMX,GAAG,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,aAAV,CAAlB;AACA,aAAOD,GAAP;AACD,KAHD,CAGE,OAAOG,GAAP,EAAY;AACZ,aAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAP;AACD;AACF;AA3BY,CAAf","sourcesContent":["import axios from 'axios'\r\n\r\nexport default {\r\n  getLoginStatus: async () => {\r\n    try {\r\n      const res = await axios.get('/api/login/status')\r\n      return res.data\r\n    } catch (err) {\r\n      return console.log(err)\r\n    }\r\n  },\r\n  postUserLogin: async (user, done) => {\r\n    try {\r\n      const res = await axios.post('/api/login', user)\r\n      // Async function for logging in, setting up callback to return two params, ( error: false if no error, res.data: userData from server )\r\n      return res.data.user.username\r\n        ? done(false, res.data)\r\n        : done(false, 'error logging in')\r\n    } catch (err) {\r\n      return done(true, false)\r\n    }\r\n  },\r\n  getLoggedOut: async () => {\r\n    try {\r\n      const res = await axios.get('/api/logout')\r\n      return res\r\n    } catch (err) {\r\n      return console.log(err)\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}