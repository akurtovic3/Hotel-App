{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\HotelApp\\\\frontend\\\\src\\\\components\\\\pages\\\\ScrollToTop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nexport default function ScrollToTop() {\n  _s();\n\n  const [isVisible, setIsVisible] = useState(false); // Top: 0 takes us all the way back to the top of the page\n  // Behavior: smooth keeps it smooth!\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n\n  useEffect(() => {\n    // Button is displayed after scrolling for 500 pixels\n    const toggleVisibility = () => {\n      if (window.pageYOffset > 500) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n\n    window.addEventListener(\"scroll\", toggleVisibility);\n    return () => window.removeEventListener(\"scroll\", toggleVisibility);\n  }, []); //scroll-to-top classes: fixed, bottom:0, right:0\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scroll-to-top\",\n    children: isVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: scrollToTop,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        color: \"white\",\n        children: \"Go up!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ScrollToTop, \"J3yJOyGdBT4L7hs1p1XQYVGMdrY=\");\n\n_c = ScrollToTop;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollToTop\");","map":{"version":3,"sources":["E:/HotelApp/frontend/src/components/pages/ScrollToTop.js"],"names":["React","useEffect","useState","ScrollToTop","isVisible","setIsVisible","scrollToTop","window","scrollTo","top","behavior","toggleVisibility","pageYOffset","addEventListener","removeEventListener"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,KAAD,CAA1C,CADoC,CAGpC;AACA;;AACA,QAAMI,WAAW,GAAG,MAAM;AACxBC,IAAAA,MAAM,CAACC,QAAP,CAAgB;AACdC,MAAAA,GAAG,EAAE,CADS;AAEdC,MAAAA,QAAQ,EAAE;AAFI,KAAhB;AAID,GALD;;AAOAT,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMU,gBAAgB,GAAG,MAAM;AAC7B,UAAIJ,MAAM,CAACK,WAAP,GAAqB,GAAzB,EAA8B;AAC5BP,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OAFD,MAEO;AACLA,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KAND;;AAQAE,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCF,gBAAlC;AAEA,WAAO,MAAMJ,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCH,gBAArC,CAAb;AACD,GAbQ,EAaN,EAbM,CAAT,CAZoC,CA2BtC;;AACE,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cACGP,SAAS,iBACR;AAAK,MAAA,OAAO,EAAEE,WAAd;AAAA,6BACE;AAAI,QAAA,KAAK,EAAE,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GArCuBH,W;;KAAAA,W","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function ScrollToTop() {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  // Top: 0 takes us all the way back to the top of the page\r\n  // Behavior: smooth keeps it smooth!\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\"\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Button is displayed after scrolling for 500 pixels\r\n    const toggleVisibility = () => {\r\n      if (window.pageYOffset > 500) {\r\n        setIsVisible(true);\r\n      } else {\r\n        setIsVisible(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", toggleVisibility);\r\n\r\n    return () => window.removeEventListener(\"scroll\", toggleVisibility);\r\n  }, []);\r\n\r\n//scroll-to-top classes: fixed, bottom:0, right:0\r\n  return (\r\n    <div className=\"scroll-to-top\">\r\n      {isVisible && (\r\n        <div onClick={scrollToTop}>\r\n          <h3 color= \"white\">Go up!</h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}