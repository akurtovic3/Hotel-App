{"ast":null,"code":"import axios from 'axios';\nexport default {\n  getReservation: id => axios.all([axios.get('/api/hw/reservation/' + id), axios.get('/api/hw/res_rooms/' + id)]).then(axios.spread((resCust, resRooms) => ({\n    resCust: resCust.data,\n    resRooms: resRooms.data\n  }))),\n  createReservation: data => {\n    const fccNum = data.creditCard.replace(/ /g, '');\n    return axios.post('/api/hw/reservation', {\n      cust: [data.firstname, data.lastname, data.address, data.city, data.state, data.zip, data.email, data.phone, fccNum, data.expirationDate],\n      reserve: [data.user_id, ''],\n      rooms: [[data.roomtype, data.arrivaldate, data.departuredate, data.adults, data.rate, data.comments]]\n    }).then(response => response).catch(error => {\n      console.log(error);\n    });\n  },\n  updateReservation: data => {\n    const fccNum = data.creditCard.replace(/ /g, '');\n    return axios.put('/api/hw/reservation', {\n      cust: [data.firstname, data.lastname, data.address, data.city, data.state, data.zip, data.email, data.phone, fccNum, data.expirationDate, data.customerId],\n      reserve: [data.user_id, '', data.reservation_id],\n      rooms: [[data.roomtype, data.arrivaldate, data.departuredate, data.adults, data.rate, data.comments, data.resRoomId]]\n    }).then(response => response).catch(error => {\n      console.log(error);\n    });\n  },\n  cancelReservation: id => axios.put(`/api/hw/cancelReservation/${id}`).then(response => response).catch(error => {\n    console.log(error);\n  }),\n  getReservations: () => axios.get('/api/hw/reservations').then(response => response.data).catch(error => {\n    console.log(error);\n  }),\n  getSomeReservations: criteria => {\n    const fname = criteria.firstname === '' ? 'undefined' : criteria.firstname;\n    const lname = criteria.lastname === '' ? 'undefined' : criteria.lastname;\n    const sdate = criteria.sdate === '' ? 'undefined' : criteria.sdate;\n    const edate = criteria.edate === '' ? 'undefined' : criteria.edate;\n    const cnum = criteria.confirmationNumber === '' ? 'undefined' : criteria.confirmationNumber;\n    return axios.get(`/api/hw/reservations_list/${fname}/${lname}/${sdate}/${edate}/${cnum}`).then(response => response.data).catch(error => {\n      console.log(error);\n    });\n  },\n  getRoomTypes: () => axios.get('/api/hw/room_types').then(response => response.data).catch(error => {\n    console.log(error);\n  }),\n  getArrivalsNew: (criteria, date) => {\n    const sdate = criteria.startDateRange === '' ? 'undefined' : criteria.startDateRange;\n    const fname = criteria.firstname === '' ? 'undefined' : criteria.firstname;\n    const lname = criteria.lastname === '' ? 'undefined' : criteria.lastname;\n    const cnum = criteria.confirmationNumber === '' ? 'undefined' : criteria.confirmationNumber;\n    return axios.all([axios.get(`/api/hw/arrivals/${sdate}/${fname}/${lname}/${cnum}`), axios.get(`/api/hw/rooms_arrivals/${date}`), axios.get(`/api/hw/pending_departures/${date}`)]).then(axios.spread((arrivals, rooms_arrivals, pending_departures) => ({\n      arrivals: arrivals.data,\n      rooms_arrivals: rooms_arrivals.data,\n      pending_departures: pending_departures.data\n    })));\n  },\n  getArrivals: criteria => {\n    const sdate = criteria.startDateRange === '' ? 'undefined' : criteria.startDateRange;\n    const fname = criteria.firstname === '' ? 'undefined' : criteria.firstname;\n    const lname = criteria.lastname === '' ? 'undefined' : criteria.lastname;\n    const cnum = criteria.confirmationNumber === '' ? 'undefined' : criteria.confirmationNumber;\n    return axios.get(`/api/hw/arrivals/${sdate}/${fname}/${lname}/${cnum}`).then(response => response.data).catch(error => {\n      console.log(error);\n    });\n  },\n  getRoomsArrivals: date => axios.get(`/api/hw/rooms_arrivals/${date}`).then(response => response.data).catch(error => console.log(error)),\n  getDepartures: criteria => {\n    const fname = criteria.firstname === '' ? 'undefined' : criteria.firstname;\n    const lname = criteria.lastname === '' ? 'undefined' : criteria.lastname;\n    const rnum = criteria.roomNumber === '' ? 'undefined' : criteria.roomNumber;\n    const sover = criteria.stayOver;\n    const dout = criteria.dueOut;\n    const dpart = criteria.checkedOut;\n    return axios.get(`/api/hw/departures/${fname}/${lname}/${rnum}/${sover}/${dout}/${dpart}`).then(response => response.data).catch(error => {\n      console.log(error);\n    });\n  },\n  getGuests: criteria => {\n    const fname = criteria.firstname === '' ? 'undefined' : criteria.firstname;\n    const lname = criteria.lastname === '' ? 'undefined' : criteria.lastname;\n    const rnum = criteria.roomNumber === '' ? 'undefined' : criteria.roomNumber;\n    const cnum = criteria.confirmationNumber === '' ? 'undefined' : criteria.confirmationNumber;\n    return axios.get(`/api/hw/guests/${fname}/${lname}/${rnum}/${cnum}`).then(response => response.data).catch(error => {\n      console.log(error);\n    });\n  },\n  updateRoomCheckin: (id, room_id) => axios.put(`/api/hw/checkinRoom/${id}/${room_id}`).then(response => response).catch(error => {\n    console.log(error);\n  }),\n  updateRoomCheckout: (id, room_num, payment_type) => axios.all([axios.put(`/api/hw/checkoutRoom/${id}/${room_num}`), axios.post('/api/hw/invoice', {\n    id: id,\n    payment_type: payment_type\n  })]).then(axios.spread((res1, res2) => [res1, res2])),\n  getPreInvoice: id => axios.get(`/api/hw/pre_invoice/${id}`).then(response => response.data).catch(error => {\n    console.log(error);\n  }),\n  getInvoice: id => axios.get(`/api/hw/invoice/${id}`).then(response => response.data).catch(error => {\n    console.log(error);\n  }),\n  getInvoiceId: id => axios.get(`/api/hw/invoice_id/${id}`).then(response => response.data).catch(error => {\n    console.log(error);\n  }),\n  updateCleanStatus: (room_id, status) => axios.put(`/api/hw/updateCleanStatus/${status}/${room_id}`).then(response => response).catch(error => {\n    console.log(error);\n  }),\n  getAvailableRooms: date => axios.all([axios.get('/api/hw/room_types'), axios.get(`/api/hw/room_types_available/${date}`)]).then(axios.spread((roomTypes, typeData) => ({\n    roomTypes: roomTypes.data,\n    typeData: typeData.data[1]\n  }))),\n  getHouseKeepingStatus: checked => axios.get(`/api/hw/housekeeping_status/${checked.clean}/${checked.dirty}/${checked.vacant}/${checked.occupied}/${checked.arrived}/${checked.stayOver}/${checked.dueOut}/${checked.departed}/${checked.notReserved}`).then(response => response.data).catch(error => {\n    console.log(error);\n  }),\n  getTaxRates: () => axios.get('/api/hw/tax_rates').then(response => response.data).catch(error => {\n    console.log(error);\n  }),\n  getHotelInfo: id => axios.get(`/api/hw/hotel_info/${id}`).then(response => response.data).catch(error => {\n    console.log(error);\n  }),\n  getRoomsIdNum: () => axios.get('/api/hw/roomsIdNum').then(response => response.data).catch(error => {\n    console.log(error);\n  }),\n  getRoomIssues: () => axios.get('/api/hw/room_issues').then(response => response.data).catch(error => {\n    console.log(error);\n  }),\n  updateRoomIssues: (id, vals) => axios.put(`/api/hw/room_issues/${id}`, {\n    vals\n  }).then(response => response).catch(error => {\n    console.log(error);\n  }),\n  updateRoomIssuesFixed: id => axios.put(`/api/hw/room_issues_fixed/${id}`).then(response => response).catch(error => {\n    console.log(error);\n  }),\n  createRoomIssue: vals => axios.post('/api/hw/room_issues', {\n    vals\n  }).then(response => response).catch(error => {\n    console.log(error);\n  }),\n  getHouseStatus: date => axios.all([axios.get('/api/hw/house_status_rooms'), axios.get(`/api/hw/house_status_res_rooms/${date}`)]).then(axios.spread((rooms, res_rooms) => ({\n    rooms: rooms.data,\n    res_rooms: res_rooms.data\n  })))\n};","map":{"version":3,"sources":["C:/Users/zahir/Desktop/noviReact/Verzija 22.1.2021/HotelApp/frontend/src/utils/api.js"],"names":["axios","getReservation","id","all","get","then","spread","resCust","resRooms","data","createReservation","fccNum","creditCard","replace","post","cust","firstname","lastname","address","city","state","zip","email","phone","expirationDate","reserve","user_id","rooms","roomtype","arrivaldate","departuredate","adults","rate","comments","response","catch","error","console","log","updateReservation","put","customerId","reservation_id","resRoomId","cancelReservation","getReservations","getSomeReservations","criteria","fname","lname","sdate","edate","cnum","confirmationNumber","getRoomTypes","getArrivalsNew","date","startDateRange","arrivals","rooms_arrivals","pending_departures","getArrivals","getRoomsArrivals","getDepartures","rnum","roomNumber","sover","stayOver","dout","dueOut","dpart","checkedOut","getGuests","updateRoomCheckin","room_id","updateRoomCheckout","room_num","payment_type","res1","res2","getPreInvoice","getInvoice","getInvoiceId","updateCleanStatus","status","getAvailableRooms","roomTypes","typeData","getHouseKeepingStatus","checked","clean","dirty","vacant","occupied","arrived","departed","notReserved","getTaxRates","getHotelInfo","getRoomsIdNum","getRoomIssues","updateRoomIssues","vals","updateRoomIssuesFixed","createRoomIssue","getHouseStatus","res_rooms"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\nexport default {\r\n  getReservation: id => axios\r\n    .all([\r\n      axios.get('/api/hw/reservation/' + id),\r\n      axios.get('/api/hw/res_rooms/' + id)\r\n    ])\r\n    .then(\r\n      axios.spread((resCust, resRooms) => ({ resCust: resCust.data, resRooms: resRooms.data }))\r\n    ),\r\n  createReservation: data => {\r\n    const fccNum = data.creditCard.replace(/ /g, '')\r\n    return axios\r\n      .post('/api/hw/reservation', {\r\n        cust: [\r\n          data.firstname,\r\n          data.lastname,\r\n          data.address,\r\n          data.city,\r\n          data.state,\r\n          data.zip,\r\n          data.email,\r\n          data.phone,\r\n          fccNum,\r\n          data.expirationDate\r\n        ],\r\n        reserve: [data.user_id, ''],\r\n        rooms: [\r\n          [\r\n            data.roomtype,\r\n            data.arrivaldate,\r\n            data.departuredate,\r\n            data.adults,\r\n            data.rate,\r\n            data.comments\r\n          ]\r\n        ]\r\n      })\r\n      .then(response => response)\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  },\r\n  updateReservation: data => {\r\n    const fccNum = data.creditCard.replace(/ /g, '')\r\n    return axios\r\n      .put('/api/hw/reservation', {\r\n        cust: [\r\n          data.firstname,\r\n          data.lastname,\r\n          data.address,\r\n          data.city,\r\n          data.state,\r\n          data.zip,\r\n          data.email,\r\n          data.phone,\r\n          fccNum,\r\n          data.expirationDate,\r\n          data.customerId\r\n        ],\r\n        reserve: [data.user_id, '', data.reservation_id],\r\n        rooms: [\r\n          [\r\n            data.roomtype,\r\n            data.arrivaldate,\r\n            data.departuredate,\r\n            data.adults,\r\n            data.rate,\r\n            data.comments,\r\n            data.resRoomId\r\n          ]\r\n        ]\r\n      })\r\n      .then(response => response)\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  },\r\n  cancelReservation: id => axios\r\n    .put(`/api/hw/cancelReservation/${id}`)\r\n    .then(response => response)\r\n    .catch(error => {\r\n      console.log(error)\r\n    }),\r\n  getReservations: () => axios\r\n    .get('/api/hw/reservations')\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      console.log(error)\r\n    }),\r\n  getSomeReservations: criteria => {\r\n    const fname = criteria.firstname === '' ? 'undefined' : criteria.firstname\r\n    const lname = criteria.lastname === '' ? 'undefined' : criteria.lastname\r\n    const sdate = criteria.sdate === '' ? 'undefined' : criteria.sdate\r\n    const edate = criteria.edate === '' ? 'undefined' : criteria.edate\r\n    const cnum =\r\n      criteria.confirmationNumber === ''\r\n        ? 'undefined'\r\n        : criteria.confirmationNumber\r\n    return axios\r\n      .get(\r\n        `/api/hw/reservations_list/${fname}/${lname}/${sdate}/${edate}/${cnum}`\r\n      )\r\n      .then(response => response.data)\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  },\r\n  getRoomTypes: () => axios\r\n    .get('/api/hw/room_types')\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      console.log(error)\r\n    }),\r\n  getArrivalsNew: (criteria, date) => {\r\n    const sdate =\r\n      criteria.startDateRange === '' ? 'undefined' : criteria.startDateRange\r\n    const fname = criteria.firstname === '' ? 'undefined' : criteria.firstname\r\n    const lname = criteria.lastname === '' ? 'undefined' : criteria.lastname\r\n    const cnum =\r\n      criteria.confirmationNumber === ''\r\n        ? 'undefined'\r\n        : criteria.confirmationNumber\r\n    return axios\r\n      .all([\r\n        axios.get(`/api/hw/arrivals/${sdate}/${fname}/${lname}/${cnum}`),\r\n        axios.get(`/api/hw/rooms_arrivals/${date}`),\r\n        axios.get(`/api/hw/pending_departures/${date}`)\r\n      ])\r\n      .then(\r\n        axios.spread((arrivals, rooms_arrivals, pending_departures) => ({\r\n          arrivals: arrivals.data,\r\n          rooms_arrivals: rooms_arrivals.data,\r\n          pending_departures: pending_departures.data\r\n        }))\r\n      )\r\n  },\r\n  getArrivals: criteria => {\r\n    const sdate =\r\n      criteria.startDateRange === '' ? 'undefined' : criteria.startDateRange\r\n    const fname = criteria.firstname === '' ? 'undefined' : criteria.firstname\r\n    const lname = criteria.lastname === '' ? 'undefined' : criteria.lastname\r\n    const cnum =\r\n      criteria.confirmationNumber === ''\r\n        ? 'undefined'\r\n        : criteria.confirmationNumber\r\n    return axios\r\n      .get(`/api/hw/arrivals/${sdate}/${fname}/${lname}/${cnum}`)\r\n      .then(response => response.data)\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  },\r\n  getRoomsArrivals: date =>\r\n    axios\r\n      .get(`/api/hw/rooms_arrivals/${date}`)\r\n      .then(response => response.data)\r\n      .catch(error => console.log(error)),\r\n  getDepartures: criteria => {\r\n    const fname = criteria.firstname === '' ? 'undefined' : criteria.firstname\r\n    const lname = criteria.lastname === '' ? 'undefined' : criteria.lastname\r\n    const rnum = criteria.roomNumber === '' ? 'undefined' : criteria.roomNumber\r\n    const sover = criteria.stayOver\r\n    const dout = criteria.dueOut\r\n    const dpart = criteria.checkedOut\r\n    return axios\r\n      .get(\r\n        `/api/hw/departures/${fname}/${lname}/${rnum}/${sover}/${dout}/${dpart}`\r\n      )\r\n      .then(response => response.data)\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  },\r\n  getGuests: criteria => {\r\n    const fname = criteria.firstname === '' ? 'undefined' : criteria.firstname\r\n    const lname = criteria.lastname === '' ? 'undefined' : criteria.lastname\r\n    const rnum = criteria.roomNumber === '' ? 'undefined' : criteria.roomNumber\r\n    const cnum =\r\n      criteria.confirmationNumber === ''\r\n        ? 'undefined'\r\n        : criteria.confirmationNumber\r\n    return axios\r\n      .get(`/api/hw/guests/${fname}/${lname}/${rnum}/${cnum}`)\r\n      .then(response => response.data)\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  },\r\n  updateRoomCheckin: (id, room_id) =>\r\n    axios\r\n      .put(`/api/hw/checkinRoom/${id}/${room_id}`)\r\n      .then(response => response)\r\n      .catch(error => {\r\n        console.log(error)\r\n      }),\r\n  updateRoomCheckout: (id, room_num, payment_type) =>\r\n    axios\r\n      .all([\r\n        axios.put(`/api/hw/checkoutRoom/${id}/${room_num}`),\r\n        axios.post('/api/hw/invoice', { id: id, payment_type: payment_type })\r\n      ])\r\n      .then(\r\n        axios.spread((res1, res2) => [res1, res2])\r\n      ),\r\n  getPreInvoice: id => axios\r\n    .get(`/api/hw/pre_invoice/${id}`)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      console.log(error)\r\n    }),\r\n  getInvoice: id => axios\r\n    .get(`/api/hw/invoice/${id}`)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      console.log(error)\r\n    }),\r\n  getInvoiceId: id => axios\r\n    .get(`/api/hw/invoice_id/${id}`)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      console.log(error)\r\n    }),\r\n  updateCleanStatus: (room_id, status) => axios\r\n    .put(`/api/hw/updateCleanStatus/${status}/${room_id}`)\r\n    .then(response => response)\r\n    .catch(error => {\r\n      console.log(error)\r\n    }),\r\n  getAvailableRooms: date => axios\r\n    .all([\r\n      axios.get('/api/hw/room_types'),\r\n      axios.get(`/api/hw/room_types_available/${date}`)\r\n    ])\r\n    .then(\r\n      axios.spread((roomTypes, typeData) => ({ roomTypes: roomTypes.data, typeData: typeData.data[1] }))\r\n    ),\r\n  getHouseKeepingStatus: checked => axios\r\n    .get(\r\n      `/api/hw/housekeeping_status/${checked.clean}/${checked.dirty}/${checked.vacant}/${checked.occupied}/${checked.arrived}/${checked.stayOver}/${checked.dueOut}/${checked.departed}/${checked.notReserved}`\r\n    )\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      console.log(error)\r\n    }),\r\n  getTaxRates: () => axios\r\n    .get('/api/hw/tax_rates')\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      console.log(error)\r\n    }),\r\n  getHotelInfo: id => axios\r\n    .get(`/api/hw/hotel_info/${id}`)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      console.log(error)\r\n    }),\r\n  getRoomsIdNum: () => axios\r\n    .get('/api/hw/roomsIdNum')\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      console.log(error)\r\n    }),\r\n  getRoomIssues: () => axios\r\n    .get('/api/hw/room_issues')\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      console.log(error)\r\n    }),\r\n  updateRoomIssues: (id, vals) => axios\r\n    .put(`/api/hw/room_issues/${id}`, { vals })\r\n    .then(response => response)\r\n    .catch(error => {\r\n      console.log(error)\r\n    }),\r\n  updateRoomIssuesFixed: id => axios\r\n    .put(`/api/hw/room_issues_fixed/${id}`)\r\n    .then(response => response)\r\n    .catch(error => {\r\n      console.log(error)\r\n    }),\r\n  createRoomIssue: vals => axios\r\n    .post('/api/hw/room_issues', { vals })\r\n    .then(response => response)\r\n    .catch(error => {\r\n      console.log(error)\r\n    }),\r\n  getHouseStatus: date => axios\r\n    .all([\r\n      axios.get('/api/hw/house_status_rooms'),\r\n      axios.get(`/api/hw/house_status_res_rooms/${date}`)\r\n    ])\r\n    .then(\r\n      axios.spread((rooms, res_rooms) => ({ rooms: rooms.data, res_rooms: res_rooms.data }))\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}