{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\zahir\\\\Desktop\\\\noviReact\\\\Verzija 22.1.2021\\\\HotelApp\\\\frontend\\\\src\\\\components\\\\pages\\\\RadnikPregledRez.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Table from 'react-bootstrap/Table';\nimport NavbarRadnik from '../NavbarRadnik';\nconst today = moment().format('YYYY-MM-DD');\n\nclass RadnikPregledRez extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedDate: today,\n      nights: '',\n      noOfRooms: '',\n      roomType: '',\n      occupied: '',\n      availableRooms: [],\n      roomTypes: [],\n      availableChecked: true,\n      occupiedChecked: false\n    };\n\n    this.handleStartDate = event => {\n      this.setState({\n        selectedDate: event.target.value\n      }, () => {\n        this.makeAxiosCall();\n      });\n    };\n\n    this.handleCheckbox = event => {\n      event.target.value === 'available' ? this.setState({\n        availableChecked: true,\n        occupiedChecked: false\n      }) : this.setState({\n        availableChecked: false,\n        occupiedChecked: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.makeAxiosCall();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavbarRadnik, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        body: true,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xl: 12,\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xl: 12,\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                striped: true,\n                bordered: true,\n                variant: \"light\",\n                children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 23\n                    }, this), this.state.roomTypes.map(type => /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: type.type\n                    }, type.room_type_id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 64,\n                      columnNumber: 25\n                    }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Total Rooms\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 21\n                  }, this), this.state.availableRooms.map(tot => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [tot.date, \" (\", moment(tot.date).format('dddd'), \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: this.state.availableChecked === true ? tot.AvailableType1 : tot.OccupiedType1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: this.state.availableChecked === true ? tot.AvailableType2 : tot.OccupiedType2\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: this.state.availableChecked === true ? tot.AvailableType3 : tot.OccupiedType3\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: this.state.availableChecked === true ? tot.TotalAvailable : tot.TotalOccupied\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 25\n                    }, this)]\n                  }, tot.date, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default RadnikPregledRez;","map":{"version":3,"sources":["C:/Users/zahir/Desktop/noviReact/Verzija 22.1.2021/HotelApp/frontend/src/components/pages/RadnikPregledRez.js"],"names":["React","Component","moment","Row","Col","Card","Table","NavbarRadnik","today","format","RadnikPregledRez","state","selectedDate","nights","noOfRooms","roomType","occupied","availableRooms","roomTypes","availableChecked","occupiedChecked","handleStartDate","event","setState","target","value","makeAxiosCall","handleCheckbox","componentDidMount","render","map","type","room_type_id","tot","date","AvailableType1","OccupiedType1","AvailableType2","OccupiedType2","AvailableType3","OccupiedType3","TotalAvailable","TotalOccupied"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,OAAOC,YAAP,MAAyB,iBAAzB;AAGA,MAAMC,KAAK,GAAGN,MAAM,GAAGO,MAAT,CAAgB,YAAhB,CAAd;;AACA,MAAMC,gBAAN,SAA+BT,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCU,KADuC,GAC/B;AACNC,MAAAA,YAAY,EAAEJ,KADR;AAENK,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,SAAS,EAAE,EAHL;AAINC,MAAAA,QAAQ,EAAE,EAJJ;AAKNC,MAAAA,QAAQ,EAAE,EALJ;AAMNC,MAAAA,cAAc,EAAE,EANV;AAONC,MAAAA,SAAS,EAAE,EAPL;AAQNC,MAAAA,gBAAgB,EAAE,IARZ;AASNC,MAAAA,eAAe,EAAE;AATX,KAD+B;;AAAA,SAmBvCC,eAnBuC,GAmBrBC,KAAK,IAAI;AACzB,WAAKC,QAAL,CAAc;AAAEX,QAAAA,YAAY,EAAEU,KAAK,CAACE,MAAN,CAAaC;AAA7B,OAAd,EAAoD,MAAM;AACxD,aAAKC,aAAL;AACD,OAFD;AAGD,KAvBsC;;AAAA,SAyBvCC,cAzBuC,GAyBtBL,KAAK,IAAI;AACxBA,MAAAA,KAAK,CAACE,MAAN,CAAaC,KAAb,KAAuB,WAAvB,GACI,KAAKF,QAAL,CAAc;AAAEJ,QAAAA,gBAAgB,EAAE,IAApB;AAA0BC,QAAAA,eAAe,EAAE;AAA3C,OAAd,CADJ,GAEI,KAAKG,QAAL,CAAc;AAAEJ,QAAAA,gBAAgB,EAAE,KAApB;AAA2BC,QAAAA,eAAe,EAAE;AAA5C,OAAd,CAFJ;AAGD,KA7BsC;AAAA;;AAavCQ,EAAAA,iBAAiB,GAAI;AACnB,SAAKF,aAAL;AACD;;AAgBDG,EAAAA,MAAM,GAAI;AACR,wBACE;AAAA,8BACA,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,gCACE,QAAC,GAAD;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,EAAT;AAAA,mCACE,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,GAAD;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,EAAT;AAAA,mCACE,QAAC,IAAD,CAAM,IAAN;AAAA,qCACE,QAAC,KAAD;AAAO,gBAAA,OAAO,MAAd;AAAe,gBAAA,QAAQ,MAAvB;AAAwB,gBAAA,OAAO,EAAC,OAAhC;AAAA,uCACE;AAAA,0CACE;AAAA,4CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEG,KAAKlB,KAAL,CAAWO,SAAX,CAAqBY,GAArB,CAAyBC,IAAI,iBAC5B;AAAA,gCAA6BA,IAAI,CAACA;AAAlC,uBAASA,IAAI,CAACC,YAAd;AAAA;AAAA;AAAA;AAAA,4BADD,CAFH,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALF;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAQG,KAAKrB,KAAL,CAAWM,cAAX,CAA0Ba,GAA1B,CAA8BG,GAAG,iBAChC;AAAA,4CACE;AAAA,iCACGA,GAAG,CAACC,IADP,QACehC,MAAM,CAAC+B,GAAG,CAACC,IAAL,CAAN,CAAiBzB,MAAjB,CAAwB,MAAxB,CADf;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAIE;AAAA,gCACG,KAAKE,KAAL,CAAWQ,gBAAX,KAAgC,IAAhC,GACGc,GAAG,CAACE,cADP,GAEGF,GAAG,CAACG;AAHV;AAAA;AAAA;AAAA;AAAA,4BAJF,eASE;AAAA,gCACG,KAAKzB,KAAL,CAAWQ,gBAAX,KAAgC,IAAhC,GACGc,GAAG,CAACI,cADP,GAEGJ,GAAG,CAACK;AAHV;AAAA;AAAA;AAAA;AAAA,4BATF,eAcE;AAAA,gCACG,KAAK3B,KAAL,CAAWQ,gBAAX,KAAgC,IAAhC,GACGc,GAAG,CAACM,cADP,GAEGN,GAAG,CAACO;AAHV;AAAA;AAAA;AAAA;AAAA,4BAdF,eAmBE;AAAA,gCACG,KAAK7B,KAAL,CAAWQ,gBAAX,KAAgC,IAAhC,GACGc,GAAG,CAACQ,cADP,GAEGR,GAAG,CAACS;AAHV;AAAA;AAAA;AAAA;AAAA,4BAnBF;AAAA,qBAAST,GAAG,CAACC,IAAb;AAAA;AAAA;AAAA;AAAA,0BADD,CARH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AA0DD;;AA1FsC;;AA6FzC,eAAexB,gBAAf","sourcesContent":["\r\nimport React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nimport NavbarRadnik from '../NavbarRadnik'\r\n\r\n\r\nconst today = moment().format('YYYY-MM-DD')\r\nclass RadnikPregledRez extends Component {\r\n  state = {\r\n    selectedDate: today,\r\n    nights: '',\r\n    noOfRooms: '',\r\n    roomType: '',\r\n    occupied: '',\r\n    availableRooms: [],\r\n    roomTypes: [],\r\n    availableChecked: true,\r\n    occupiedChecked: false\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.makeAxiosCall()\r\n  }\r\n\r\n  \r\n\r\n  handleStartDate = event => {\r\n    this.setState({ selectedDate: event.target.value }, () => {\r\n      this.makeAxiosCall()\r\n    })\r\n  }\r\n\r\n  handleCheckbox = event => {\r\n    event.target.value === 'available'\r\n      ? this.setState({ availableChecked: true, occupiedChecked: false })\r\n      : this.setState({ availableChecked: false, occupiedChecked: true })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <>\r\n      <NavbarRadnik/>\r\n        <Card body>\r\n          <Row>\r\n            <Col xl={12}>\r\n              <Card.Body>\r\n                \r\n              </Card.Body>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xl={12}>\r\n              <Card.Body>\r\n                <Table striped bordered variant='light'>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th>Date</th>\r\n                      {this.state.roomTypes.map(type => (\r\n                        <th key={type.room_type_id}>{type.type}</th>\r\n                      ))}\r\n                      <th>Total Rooms</th>\r\n                    </tr>\r\n                    {this.state.availableRooms.map(tot => (\r\n                      <tr key={tot.date}>\r\n                        <td>\r\n                          {tot.date} ({moment(tot.date).format('dddd')})\r\n                        </td>\r\n                        <td>\r\n                          {this.state.availableChecked === true\r\n                            ? tot.AvailableType1\r\n                            : tot.OccupiedType1}\r\n                        </td>\r\n                        <td>\r\n                          {this.state.availableChecked === true\r\n                            ? tot.AvailableType2\r\n                            : tot.OccupiedType2}\r\n                        </td>\r\n                        <td>\r\n                          {this.state.availableChecked === true\r\n                            ? tot.AvailableType3\r\n                            : tot.OccupiedType3}\r\n                        </td>\r\n                        <td>\r\n                          {this.state.availableChecked === true\r\n                            ? tot.TotalAvailable\r\n                            : tot.TotalOccupied}\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </Card.Body>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RadnikPregledRez"]},"metadata":{},"sourceType":"module"}